Pre-requisite command
- Creating python env on local server
{python -m venv ~/pythonenv} where all the dependencies are loaded

- Activating virtual virtual env i.e pythonenv
{source ~/pythonenv/bin/activate}

- Deactivating virtual virtual env i.e pythonenv
{deactivate}

- Install project requirements by mentioning them in requirements.txt
{pip install -r requirements.txt}

1. Creating project in current directory
{django-admin.py startproject profiles_project .}

2. A django project can have multiple apps
{python manage.py startapp profiles_api}

3. Editing setting.py in project file to enable app
{add django_restframework, django_restframework.authtoken, myapp}

4. Running django dev server
{python manage.py runserver 0.0.0.0:8000}

5. Adding custom user model to use this in settings.py of profiles_api
{AUTH_USER_MODEL = 'profiles_api.UserProfile'}
This tells django to look at our profiles API app and then find the model code user profile & use this for all
our authentication and use registration in our project

6. Creating migrations file for profiles_api app
{python manage.py makemigrations profiles_api}

7. Running migration
{python manage.py migrate}

8. Creating superuser for administrating djangoproject
{python manage.py createsuperuser}

9. Register newly created model with django admin in admin.py of profiles_api
{admin.site.register(models.UserProfile)}
This tells django to register user profile model with the admin side so it makes it accessible through the admin
interface
